" Setup Bundle Support {
	call pathogen#infect()
"}

" Basics {
	set nocompatible "disables compatibility with vi
	let mapleader="," "Mapleader
"}

" General {
  filetype off
 	filetype plugin indent on " Automatically change file types.
  autocmd BufNewFile,BufRead *.erb set filetype=html
	au BufRead,BufNewFile *.less setfiletype css

	"set autochdir " Automatically always switch to the current files directory.
	set shortmess=filmnrxoOtT      " abbrev. of messages (avoids 'hit enter')
	set history=1000 " Keep (a lot) more history

	" No needs for backups, I have Git for that
	set noswapfile 
	set nobackup
" }

" Vim UI {
	syntax on " syntax highlighting
	set background=dark
	set mouse=a
	set number "Show lines numbers

  :set guioptions-=m  "remove menu bar
  :set guioptions-=T  "remove toolbar
  :set guioptions-=r  "remove right-hand scroll bar
	
	set t_Co=256 "Terminal Colors
	colors xoria256 " Load a colorschem
  "color solarized  

	set ruler "Display current cursor position in lower right corner.
	set showcmd "Show command in bottom right portion of the screen

	set laststatus=2 "Always show the status line

	set showmatch " Show matching of: () [] {}

	set mousehide "Hide mouse when typing

	" Searching {
		set ignorecase " Case insensitive search
		set smartcase " Case sensitive when uppercase is present
		set incsearch " Search as you type
		set hlsearch " Highlight search matches
	" }
	
	set autoread " Auto read when file is changed
	set hidden " Hide buffers, rather than close them

	set autowrite "Write the old file out when switching between files.

	set wildmenu " More useful command-line completion
	set wildmode=list:longest,full "Auto-completion menu
"}

" Formatting {
	" Be smart, and awesome, about indentation
	set autoindent " Indent at the same level as previous line
	set smartindent
	set smarttab
	set expandtab " Tabs are spaces

	set tabstop=2 " Tabs are 2 spaces
	set backspace=2 " Backspace back 2 spaces
	set shiftwidth=2 " Even if there are tabs, preview as 2 spaces
" }

" Key Mapping {
	map <S-C-J> <C-W>j<C-W>_
	map <S-C-K> <C-W>k<C-W>_
	map <S-C-L> <C-W>l<C-W>_
	map <S-C-H> <C-W>h<C-W>_
	map <S-C-K> <C-W>k<C-W>_
	map <C-J> <C-W>j
	map <C-K> <C-W>k
	map <C-L> <C-W>l
	map <C-H> <C-W>h
	map <C-K> <C-W>k
	map <S-H> gT map <S-L> gt

	" Use jk as escape
	inoremap jk <esc>

	" Shift key fixes
	cmap W w
	cmap WQ wq
	cmap wQ wq
	cmap Q q

	" Key mappings
	:noremap ,d :bd<CR>
" }

" Plugins {
  " NerdTree {
    let NERDTreeChDirMode = 1
    let NERDTreeWinSize=20

    :noremap ,n :NERDTreeToggle<CR>
  " }
  " Delimitmate {
    au FileType * let b:delimitMate_autoclose = 1
  " }
" }
