

"
"   ██╗   ██╗ ██╗ ███╗   ███╗ ██████╗   ██████╗
"   ██║   ██║ ██║ ████╗ ████║ ██╔══██╗ ██╔════╝
"   ██║   ██║ ██║ ██╔████╔██║ ██████╔╝ ██║
"   ╚██╗ ██╔╝ ██║ ██║╚██╔╝██║ ██╔══██╗ ██║
" ██╗╚████╔╝  ██║ ██║ ╚═╝ ██║ ██║  ██║ ╚██████╗
" ╚═╝ ╚═══╝   ╚═╝ ╚═╝     ╚═╝ ╚═╝  ╚═╝  ╚═════╝
"

"""""""""""""""""""""
"
" PLUGINS
"
"""""""""""""""""""""

function! s:LoadPlugins()
	" core plugins
	Plug 'tpope/vim-sensible'
	Plug 'tpope/vim-surround'
	Plug 'tpope/vim-repeat'
	Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
	Plug 'junegunn/fzf.vim'
	Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
	Plug 'scrooloose/nerdcommenter'
	Plug 'jiangmiao/auto-pairs'
	Plug 'itchyny/lightline.vim'
	Plug 'editorconfig/editorconfig-vim'

	" main plugins
	Plug 'myusuf3/numbers.vim'
	Plug 'bkad/CamelCaseMotion'
	Plug 'benekastah/neomake'
	Plug 'schickling/vim-bufonly'
	Plug 'mhinz/vim-startify'
	Plug 'justinmk/vim-sneak'
	Plug 'kassio/neoterm'
	Plug 'nathanaelkane/vim-indent-guides'

	" git
	Plug 'tpope/vim-fugitive'
	Plug 'Xuyuanp/nerdtree-git-plugin'
	Plug 'airblade/vim-gitgutter'

	" autocomplete
	Plug 'ervandew/supertab'
	if has('nvim')
	  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins'  }
	  Plug 'carlitux/deoplete-ternjs', { 'do': 'npm install -g tern' }
	  " Plug 'steelsojka/deoplete-flow'
	else
	  Plug 'Valloric/YouCompleteMe', { 'do': './install.py --tern-completer' }
	endif

	" language plugins
	Plug 'sheerun/vim-polyglot'
	Plug 'mattn/emmet-vim'
	Plug 'moll/vim-node'

  " File system
  Plug 'duggiefresh/vim-easydir'

	" snippets
  Plug 'Shougo/neosnippet'
  Plug 'Shougo/neosnippet-snippets'
	Plug 'honza/vim-snippets'
	Plug 'epilande/vim-es2015-snippets'
	Plug 'epilande/vim-react-snippets'

	" theme
	" Plug 'morhetz/gruvbox'
	" Plug 'chriskempson/base16-vim'
	Plug 'lifepillar/vim-solarized8'
endfunction

let s:use_plugins = 1
let s:plug_dir = '/vendor/'
let s:plug_dir .= has('nvim') ? 'nvim' : 'vim'
let s:plug_absdir = g:helper#vim_dir . s:plug_dir

let g:plug_window = 'tabnew'

if s:use_plugins
  " Load vim-plug and its plugins?
  if empty(glob(expand(g:helper#vim_dir . '/autoload/plug.vim')))
    execute '!curl -fLo '
          \ . g:helper#vim_dir . '/autoload/plug.vim '
          \ . 'https://raw.githubusercontent.com/'
          \ . 'junegunn/vim-plug/master/plug.vim'
  endif

  call plug#begin(s:plug_absdir)
    call s:LoadPlugins()
    if !isdirectory(expand(s:plug_absdir)) | PlugInstall
    endif
  call plug#end()
endif

"""""""""""""""""""""
"
" SETTINGS
"
"""""""""""""""""""""

" Some wild settings
set number "Show relative lines numbers
set showmatch " Show matching of: () [] {}
set mousehide "Hide mouse when typing
set mouse=a "Enable Mouse clicking
set showmode " Show the current mode
set hidden " Hide buffers, rather than close them
set cursorline " Highlight current line
set gdefault " Add the g flag to search/replace by default
set nostartofline " Don’t reset cursor to start of line when moving around.
set shortmess=atI " Don’t show the intro message when starting Vim
set visualbell " Use visual bell instead of audible bell
set backupcopy=yes "optimize webpack watch option
set clipboard+=unnamedplus
set ignorecase

" Whitespace
set nowrap " don't wrap lines
set tabstop=2 " Make tabs as wide as two spaces
set shiftwidth=2 " The # of spaces for indenting.
set expandtab " use spaces, not tabs (optional)

" set <leader>
let mapleader=","

" mousesupport if not using neovim
if !has('nvim')
	set ttymouse=xterm2
endif

" Set colorscheme.
" set background=dark
colorscheme solarized8_dark

" Local dirs
execute 'set backupdir=' . g:helper#vim_dir . '/.tmp/backup//'
execute 'set directory=' . g:helper#vim_dir . '/.tmp/swap//'
execute 'set undodir=' . g:helper#vim_dir . '/.tmp/undo//'

"""""""""""""""""""""
"
" KEYBINDINGS
"
"""""""""""""""""""""

" esc mapping
:inoremap jk <esc>

" Clear search highlights
noremap <silent><Leader>/ :nohls<CR>

" Select all
map <Leader>a ggVG

" toogle background
map <Leader>bg :let &background = ( &background == "dark"? "light" : "dark" )<CR>

" Allow saving of files as sudo when I forgot to start vim using sudo.
cmap w!! w !sudo tee > /dev/null %

" Maximize window and return to previous split structure
nmap t% :tabedit %<CR>
nmap td :tabclose<CR>

" easier navigation between split windows
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" support ejs 
au BufNewFile,BufRead *.ejs set filetype=html

" auto reload of vimrc
noremap <leader>r :source $MYVIMRC<CR>

" quick save
noremap <leader>s :update<CR>

" Not using $MYVIMRC since it varies based on (n)vim
nnoremap  <leader>evi   :<C-U>edit $VIM_DOTFILES/init.vim<CR>
nnoremap  <leader>evr   :<C-U>edit $VIM_DOTFILES/vimrc<CR>

" format JSON
" map <leader>j !python -m json.tool<CR>
" command J :%!python -mjson.tool
