# A good starting point: https://gist.github.com/rab/4067067
# checkout  https://github.com/necolas/dotfiles/commit/916952ac1c0e30ce6a0b7e3ed4a9167c4f16f9c3#diff-2134a4e7ec4e3abf1f4b1ae2e138d47bf3cfa7d837db92d9d1e61e16de4ba349

[alias]
  ai      = add -i
  patch = add -p
  p = patch
  fza     = !git ls-files -m -o --exclude-standard | fzf --print0 -m --preview 'git diff {}' --height=100% --preview-window=top:50%:wrap | xargs -0 -t git add

  b       = branch
  be      = branch --edit-description
  bv      = branch --verbose
  done    = branch --verbose --merged
  um      = branch --verbose --no-merged

  # `git remote prune origin`: remove remote-tracking branches that were deleted from the remote repo
  # `git gc`: cleanup unnecessary files and optimize the local repository
  # `git clean -df`: remove untracked files and directories from the working tree
  # `git stash clear`: remove all stashed states
  trim = !git remote prune origin && git gc
  cleanup = !git clean -df && git stash clear

  cp      = cherry-pick
  co      = checkout
  cb      = checkout -b
  ct      = checkout --track
  count   = !git --no-pager log --oneline | wc -l
  full    = show --format=fuller
  delta   = "!f() { git diff \"$@\" | delta; }; f"

  # Show just the HEAD commit message (no indent) and nothing else
  message = !git --paginate log -1 --pretty=format:%B
  msg = message

  master  = checkout master
  main    = checkout main
  develop = checkout develop

  d       = diff -w
  ds      = diff --staged -w
  staged  = ds -w
  dino    = diff --name-only
  dword   = diff --word-diff
  dcopy   = !git diff --no-color | xclip -selection clipboard
  dft     = difftool

  c       = commit
  cm      = commit -m
  amend      = commit --amend
  recommit   = commit --amend --no-edit
  reword  = commit --amend --only -v

  p       = push
  pf      = push --force-with-lease
  pl      = pull
  plr     = pull --rebase

  r       = rebase
  rc      = rebase --continue
  ra      = rebase --abort

  sync    = !git fetch --all && git rebase origin/master
  syncd   = !git fetch --all && git rebase origin/develop
  fresh   = !git fetch --all --prune
  ; fresh   = remote update --prune

  # Recover previous COMMIT_EDITMSG, if there is one.
  recover = !cat "$(git rev-parse --git-dir 2> /dev/null)/COMMIT_EDITMSG"

  # Mark merge conflicts as resolved.
  resolve = "!f() { git add $(git diff --name-only --diff-filter=U -- \"${@:-.}\"); }; f"

  # requires Git 1.6.2 or later
  rollback = !bash -c 'git reset --merge HEAD~${1-1}' -

  rehard  = reset --hard
  resoft  = reset --soft

  st      = status
  s       = status --short --branch

  lg      = log --color --graph --pretty=format:'%C(auto)%h%Creset %s%C(auto)%d%Creset %C(magenta bold)(%cr)%Creset %C(cyan)<%aN>%Creset' --abbrev-commit

  g       = grep --line-number --break --heading

  ss      = stash push -S

  aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /' | sort

  # Find out who is currently active on the repository
  # Displays committers in descending order of number of commits
  who     = shortlog --numbered --summary --email --no-merges --since='3 months'

[apply]
  # Detect whitespace errors when applying a patch
  whitespace = fix

[core]
  # Use custom `.gitignore` and `.gitattributes`
  excludesfile = ~/.gitignore_global
  # pager = "delta --diff-so-fancy"

[push]
  default = simple
  autoSetupRemote = true
[pull]
  ff = only
[merge]
  tool = vimdiff
[mergetool]
  path = nvim
[init]
  defaultBranch = main
[github]
  user = namjul
[difftool]
  prompt = false
[pager]
  difftool = true
